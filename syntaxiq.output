Terminals unused in grammar

    FSIN
    WHILE
    DONE
    DO


State 23 conflicts: 3 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: program_body

    2 program_body: stat
    3             | stat program_body

    4 stat: bloc
    5     | blocSi

    6 bloc: instr ';'
    7     | instr ';' bloc

    8 instr: %empty
    9      | VARIABLE '=' E
   10      | VARIABLE '+' E
   11      | VARIABLE '-' E
   12      | VARIABLE '/' E
   13      | VARIABLE '%' E
   14      | VARIABLE '*' E
   15      | PRINT VARIABLE
   16      | READ VARIABLE
   17      | VARIABLE '=' cond

   18 blocSi: SI cond alo bloc finSi
   19       | SI cond alo bloc sino bloc finSi

   20 finSi: FSI

   21 alo: ALORS

   22 sino: SINON

   23 cond: %empty
   24     | '(' F '=' F ')'
   25     | '(' F '!' F ')'
   26     | '(' F '<' F ')'
   27     | '(' F '>' F ')'

   28 E: T
   29  | E '+' T
   30  | E '-' T

   31 T: F
   32  | T '*' F
   33  | T '/' F
   34  | T '%' F

   35 F: INTEGER
   36  | VARIABLE
   37  | '(' E ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 25
    '%' (37) 13 34
    '(' (40) 24 25 26 27 37
    ')' (41) 24 25 26 27 37
    '*' (42) 14 32
    '+' (43) 10 29
    '-' (45) 11 30
    '/' (47) 12 33
    ';' (59) 6 7
    '<' (60) 26
    '=' (61) 9 17 24
    '>' (62) 27
    error (256)
    INTEGER (258) 35
    PRINT (259) 15
    VARIABLE (260) 9 10 11 12 13 14 15 16 17 36
    SI (261) 18 19
    ALORS (262) 21
    SINON (263) 22
    FSI (264) 20
    FSIN (265)
    READ (266) 16
    WHILE (267)
    DONE (268)
    DO (269)


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    Program (28)
        on left: 1
        on right: 0
    program_body (29)
        on left: 2 3
        on right: 1 3
    stat (30)
        on left: 4 5
        on right: 2 3
    bloc (31)
        on left: 6 7
        on right: 4 7 18 19
    instr (32)
        on left: 8 9 10 11 12 13 14 15 16 17
        on right: 6 7
    blocSi (33)
        on left: 18 19
        on right: 5
    finSi (34)
        on left: 20
        on right: 18 19
    alo (35)
        on left: 21
        on right: 18 19
    sino (36)
        on left: 22
        on right: 19
    cond (37)
        on left: 23 24 25 26 27
        on right: 17 18 19
    E (38)
        on left: 28 29 30
        on right: 9 10 11 12 13 14 29 30 37
    T (39)
        on left: 31 32 33 34
        on right: 28 29 30 32 33 34
    F (40)
        on left: 35 36 37
        on right: 24 25 26 27 31 32 33 34


State 0

    0 $accept: . Program $end

    PRINT     shift, and go to state 1
    VARIABLE  shift, and go to state 2
    SI        shift, and go to state 3
    READ      shift, and go to state 4

    $default  reduce using rule 8 (instr)

    Program       go to state 5
    program_body  go to state 6
    stat          go to state 7
    bloc          go to state 8
    instr         go to state 9
    blocSi        go to state 10


State 1

   15 instr: PRINT . VARIABLE

    VARIABLE  shift, and go to state 11


State 2

    9 instr: VARIABLE . '=' E
   10      | VARIABLE . '+' E
   11      | VARIABLE . '-' E
   12      | VARIABLE . '/' E
   13      | VARIABLE . '%' E
   14      | VARIABLE . '*' E
   17      | VARIABLE . '=' cond

    '='  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '/'  shift, and go to state 15
    '%'  shift, and go to state 16
    '*'  shift, and go to state 17


State 3

   18 blocSi: SI . cond alo bloc finSi
   19       | SI . cond alo bloc sino bloc finSi

    '('  shift, and go to state 18

    $default  reduce using rule 23 (cond)

    cond  go to state 19


State 4

   16 instr: READ . VARIABLE

    VARIABLE  shift, and go to state 20


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 21


State 6

    1 Program: program_body .

    $default  reduce using rule 1 (Program)


State 7

    2 program_body: stat .
    3             | stat . program_body

    PRINT     shift, and go to state 1
    VARIABLE  shift, and go to state 2
    SI        shift, and go to state 3
    READ      shift, and go to state 4

    ';'       reduce using rule 8 (instr)
    $default  reduce using rule 2 (program_body)

    program_body  go to state 22
    stat          go to state 7
    bloc          go to state 8
    instr         go to state 9
    blocSi        go to state 10


State 8

    4 stat: bloc .

    $default  reduce using rule 4 (stat)


State 9

    6 bloc: instr . ';'
    7     | instr . ';' bloc

    ';'  shift, and go to state 23


State 10

    5 stat: blocSi .

    $default  reduce using rule 5 (stat)


State 11

   15 instr: PRINT VARIABLE .

    $default  reduce using rule 15 (instr)


State 12

    9 instr: VARIABLE '=' . E
   17      | VARIABLE '=' . cond

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 26

    $default  reduce using rule 23 (cond)

    cond  go to state 27
    E     go to state 28
    T     go to state 29
    F     go to state 30


State 13

   10 instr: VARIABLE '+' . E

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 32
    T  go to state 29
    F  go to state 30


State 14

   11 instr: VARIABLE '-' . E

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 33
    T  go to state 29
    F  go to state 30


State 15

   12 instr: VARIABLE '/' . E

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 34
    T  go to state 29
    F  go to state 30


State 16

   13 instr: VARIABLE '%' . E

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 35
    T  go to state 29
    F  go to state 30


State 17

   14 instr: VARIABLE '*' . E

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 36
    T  go to state 29
    F  go to state 30


State 18

   24 cond: '(' . F '=' F ')'
   25     | '(' . F '!' F ')'
   26     | '(' . F '<' F ')'
   27     | '(' . F '>' F ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 37


State 19

   18 blocSi: SI cond . alo bloc finSi
   19       | SI cond . alo bloc sino bloc finSi

    ALORS  shift, and go to state 38

    alo  go to state 39


State 20

   16 instr: READ VARIABLE .

    $default  reduce using rule 16 (instr)


State 21

    0 $accept: Program $end .

    $default  accept


State 22

    3 program_body: stat program_body .

    $default  reduce using rule 3 (program_body)


State 23

    6 bloc: instr ';' .
    7     | instr ';' . bloc

    PRINT     shift, and go to state 1
    VARIABLE  shift, and go to state 2
    READ      shift, and go to state 4

    PRINT     [reduce using rule 6 (bloc)]
    VARIABLE  [reduce using rule 6 (bloc)]
    READ      [reduce using rule 6 (bloc)]
    ';'       reduce using rule 6 (bloc)
    ';'       [reduce using rule 8 (instr)]
    $default  reduce using rule 6 (bloc)

    bloc   go to state 40
    instr  go to state 9


State 24

   35 F: INTEGER .

    $default  reduce using rule 35 (F)


State 25

   36 F: VARIABLE .

    $default  reduce using rule 36 (F)


State 26

   24 cond: '(' . F '=' F ')'
   25     | '(' . F '!' F ')'
   26     | '(' . F '<' F ')'
   27     | '(' . F '>' F ')'
   37 F: '(' . E ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 41
    T  go to state 29
    F  go to state 42


State 27

   17 instr: VARIABLE '=' cond .

    $default  reduce using rule 17 (instr)


State 28

    9 instr: VARIABLE '=' E .
   29 E: E . '+' T
   30  | E . '-' T

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 9 (instr)


State 29

   28 E: T .
   32 T: T . '*' F
   33  | T . '/' F
   34  | T . '%' F

    '/'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47

    $default  reduce using rule 28 (E)


State 30

   31 T: F .

    $default  reduce using rule 31 (T)


State 31

   37 F: '(' . E ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    E  go to state 41
    T  go to state 29
    F  go to state 30


State 32

   10 instr: VARIABLE '+' E .
   29 E: E . '+' T
   30  | E . '-' T

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 10 (instr)


State 33

   11 instr: VARIABLE '-' E .
   29 E: E . '+' T
   30  | E . '-' T

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 11 (instr)


State 34

   12 instr: VARIABLE '/' E .
   29 E: E . '+' T
   30  | E . '-' T

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 12 (instr)


State 35

   13 instr: VARIABLE '%' E .
   29 E: E . '+' T
   30  | E . '-' T

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 13 (instr)


State 36

   14 instr: VARIABLE '*' E .
   29 E: E . '+' T
   30  | E . '-' T

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 14 (instr)


State 37

   24 cond: '(' F . '=' F ')'
   25     | '(' F . '!' F ')'
   26     | '(' F . '<' F ')'
   27     | '(' F . '>' F ')'

    '='  shift, and go to state 48
    '!'  shift, and go to state 49
    '<'  shift, and go to state 50
    '>'  shift, and go to state 51


State 38

   21 alo: ALORS .

    $default  reduce using rule 21 (alo)


State 39

   18 blocSi: SI cond alo . bloc finSi
   19       | SI cond alo . bloc sino bloc finSi

    PRINT     shift, and go to state 1
    VARIABLE  shift, and go to state 2
    READ      shift, and go to state 4

    $default  reduce using rule 8 (instr)

    bloc   go to state 52
    instr  go to state 9


State 40

    7 bloc: instr ';' bloc .

    $default  reduce using rule 7 (bloc)


State 41

   29 E: E . '+' T
   30  | E . '-' T
   37 F: '(' E . ')'

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    ')'  shift, and go to state 53


State 42

   24 cond: '(' F . '=' F ')'
   25     | '(' F . '!' F ')'
   26     | '(' F . '<' F ')'
   27     | '(' F . '>' F ')'
   31 T: F .

    '='  shift, and go to state 48
    '!'  shift, and go to state 49
    '<'  shift, and go to state 50
    '>'  shift, and go to state 51

    $default  reduce using rule 31 (T)


State 43

   29 E: E '+' . T

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    T  go to state 54
    F  go to state 30


State 44

   30 E: E '-' . T

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    T  go to state 55
    F  go to state 30


State 45

   33 T: T '/' . F

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 56


State 46

   34 T: T '%' . F

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 57


State 47

   32 T: T '*' . F

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 58


State 48

   24 cond: '(' F '=' . F ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 59


State 49

   25 cond: '(' F '!' . F ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 60


State 50

   26 cond: '(' F '<' . F ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 61


State 51

   27 cond: '(' F '>' . F ')'

    INTEGER   shift, and go to state 24
    VARIABLE  shift, and go to state 25
    '('       shift, and go to state 31

    F  go to state 62


State 52

   18 blocSi: SI cond alo bloc . finSi
   19       | SI cond alo bloc . sino bloc finSi

    SINON  shift, and go to state 63
    FSI    shift, and go to state 64

    finSi  go to state 65
    sino   go to state 66


State 53

   37 F: '(' E ')' .

    $default  reduce using rule 37 (F)


State 54

   29 E: E '+' T .
   32 T: T . '*' F
   33  | T . '/' F
   34  | T . '%' F

    '/'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47

    $default  reduce using rule 29 (E)


State 55

   30 E: E '-' T .
   32 T: T . '*' F
   33  | T . '/' F
   34  | T . '%' F

    '/'  shift, and go to state 45
    '%'  shift, and go to state 46
    '*'  shift, and go to state 47

    $default  reduce using rule 30 (E)


State 56

   33 T: T '/' F .

    $default  reduce using rule 33 (T)


State 57

   34 T: T '%' F .

    $default  reduce using rule 34 (T)


State 58

   32 T: T '*' F .

    $default  reduce using rule 32 (T)


State 59

   24 cond: '(' F '=' F . ')'

    ')'  shift, and go to state 67


State 60

   25 cond: '(' F '!' F . ')'

    ')'  shift, and go to state 68


State 61

   26 cond: '(' F '<' F . ')'

    ')'  shift, and go to state 69


State 62

   27 cond: '(' F '>' F . ')'

    ')'  shift, and go to state 70


State 63

   22 sino: SINON .

    $default  reduce using rule 22 (sino)


State 64

   20 finSi: FSI .

    $default  reduce using rule 20 (finSi)


State 65

   18 blocSi: SI cond alo bloc finSi .

    $default  reduce using rule 18 (blocSi)


State 66

   19 blocSi: SI cond alo bloc sino . bloc finSi

    PRINT     shift, and go to state 1
    VARIABLE  shift, and go to state 2
    READ      shift, and go to state 4

    $default  reduce using rule 8 (instr)

    bloc   go to state 71
    instr  go to state 9


State 67

   24 cond: '(' F '=' F ')' .

    $default  reduce using rule 24 (cond)


State 68

   25 cond: '(' F '!' F ')' .

    $default  reduce using rule 25 (cond)


State 69

   26 cond: '(' F '<' F ')' .

    $default  reduce using rule 26 (cond)


State 70

   27 cond: '(' F '>' F ')' .

    $default  reduce using rule 27 (cond)


State 71

   19 blocSi: SI cond alo bloc sino bloc . finSi

    FSI  shift, and go to state 64

    finSi  go to state 72


State 72

   19 blocSi: SI cond alo bloc sino bloc finSi .

    $default  reduce using rule 19 (blocSi)
